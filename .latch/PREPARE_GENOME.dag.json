{
    "vertices": [
        {
            "content": {
                "id": "0",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "1",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "2",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "3",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "4",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "5",
                "label": "params.fasta",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "6",
                "label": "params.fasta",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "7",
                "label": "Channel.value(this.file(params.fasta))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "8",
                "label": "Merge ch_fasta",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "9",
                "label": "(params.aligner == bismark)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "10",
                "label": "(params.aligner == bismark_hisat)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark_hisat\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "11",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "12",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "13",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "14",
                "label": "params.bismark_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "15",
                "label": "params.bismark_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "16",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "17",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "18",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "19",
                "label": "this.file(params.bismark_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "20",
                "label": "[[:], this.file(params.bismark_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "21",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "22",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "23",
                "label": "Channel.value(this.file(params.bismark_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "24",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "25",
                "label": "BISMARK_GENOMEPREPARATION",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_GENOMEPREPARATION\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/genomepreparation/main.nf",
                "unaliased": "BISMARK_GENOMEPREPARATION",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "26",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "27",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "28",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "29",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bwameth\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "30",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "31",
                "label": "(params.aligner == bwameth)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "32",
                "label": "params.bwa_meth_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "33",
                "label": "params.bwa_meth_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "34",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".tar.gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "35",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "36",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "37",
                "label": "this.file(params.bwa_meth_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "38",
                "label": "[[:], this.file(params.bwa_meth_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "39",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "40",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "41",
                "label": "Channel.value(this.file(params.bwa_meth_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "42",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "43",
                "label": "BWAMETH_INDEX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BWAMETH_INDEX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bwameth/index/main.nf",
                "unaliased": "BWAMETH_INDEX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "44",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "45",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "46",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "47",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "48",
                "label": "params.fasta_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "49",
                "label": "params.fasta_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "50",
                "label": "Channel.value(this.file(params.fasta_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "51",
                "label": "[[:], ch_fasta]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "52",
                "label": "SAMTOOLS_FAIDX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_FAIDX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gzi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "fai",
                    "gzi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/faidx/main.nf",
                "unaliased": "SAMTOOLS_FAIDX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "53",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "54",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "55",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "56",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "57",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "58",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "59",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "60",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "61",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "62",
                "label": "Merge UNTAR",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "63",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "64",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "65",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        },
        {
            "content": {
                "id": "66",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":null}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf"
            }
        }
    ],
    "edges": [
        {
            "content": {
                "label": "",
                "src": "5",
                "dest": "6",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "6",
                "dest": "7",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "7",
                "dest": "8",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1",
                "dest": "8",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "9",
                "dest": "11",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "10",
                "dest": "11",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "11",
                "dest": "12",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "12",
                "dest": "13",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "14",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "15",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "14",
                "dest": "15",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "16",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "16",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "17",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "17",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "16",
                "dest": "17",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "18",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "18",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "17",
                "dest": "18",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "19",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "19",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "18",
                "dest": "19",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "20",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "20",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "18",
                "dest": "20",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "19",
                "dest": "20",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "21",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "21",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "18",
                "dest": "21",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "20",
                "dest": "21",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "22",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "22",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "18",
                "dest": "22",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "21",
                "dest": "22",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "23",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "23",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "18",
                "dest": "23",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "24",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "15",
                "dest": "24",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "22",
                "dest": "24",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "23",
                "dest": "24",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "25",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "15",
                "dest": "25",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "8",
                "dest": "25",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "26",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "15",
                "dest": "26",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "0",
                "dest": "26",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "25",
                "dest": "26",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "27",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "24",
                "dest": "27",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "25",
                "dest": "27",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "13",
                "dest": "28",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "0",
                "dest": "28",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "26",
                "dest": "28",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "29",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "30",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "29",
                "dest": "30",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "31",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "30",
                "dest": "31",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "32",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "32",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "33",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "33",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "32",
                "dest": "33",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "34",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "34",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "34",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "35",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "35",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "35",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "34",
                "dest": "35",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "36",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "36",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "36",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "35",
                "dest": "36",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "37",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "37",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "37",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "36",
                "dest": "37",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "38",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "38",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "38",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "36",
                "dest": "38",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "37",
                "dest": "38",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "39",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "39",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "39",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "36",
                "dest": "39",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "38",
                "dest": "39",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "40",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "40",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "40",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "36",
                "dest": "40",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "39",
                "dest": "40",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "41",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "41",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "41",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "36",
                "dest": "41",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "42",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "42",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "33",
                "dest": "42",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "40",
                "dest": "42",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "41",
                "dest": "42",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "43",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "43",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "33",
                "dest": "43",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "8",
                "dest": "43",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "44",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "44",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "33",
                "dest": "44",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "0",
                "dest": "44",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "43",
                "dest": "44",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "45",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "45",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "42",
                "dest": "45",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "2",
                "dest": "45",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "46",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "46",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "3",
                "dest": "46",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "43",
                "dest": "46",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "47",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "47",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "0",
                "dest": "47",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "44",
                "dest": "47",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "48",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "48",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "49",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "49",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "48",
                "dest": "49",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "50",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "50",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "49",
                "dest": "50",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "51",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "51",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "49",
                "dest": "51",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "8",
                "dest": "51",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "52",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "52",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "49",
                "dest": "52",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "51",
                "dest": "52",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "53",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "53",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "49",
                "dest": "53",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "52",
                "dest": "53",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "54",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "54",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "49",
                "dest": "54",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "47",
                "dest": "54",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "52",
                "dest": "54",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "55",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "55",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "50",
                "dest": "55",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "53",
                "dest": "55",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "56",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "31",
                "dest": "56",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "47",
                "dest": "56",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "54",
                "dest": "56",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "57",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "45",
                "dest": "57",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "2",
                "dest": "57",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "58",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "55",
                "dest": "58",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "4",
                "dest": "58",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "59",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "46",
                "dest": "59",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "3",
                "dest": "59",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "13",
                "dest": "60",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "56",
                "dest": "60",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "0",
                "dest": "60",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "27",
                "dest": "61",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "57",
                "dest": "61",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "21",
                "dest": "62",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "21",
                "dest": "62",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "39",
                "dest": "62",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "39",
                "dest": "62",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "28",
                "dest": "63",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "60",
                "dest": "63",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "4",
                "dest": "64",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "58",
                "dest": "64",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "3",
                "dest": "65",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "59",
                "dest": "65",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "63",
                "dest": "66",
                "branch": null
            }
        }
    ]
}