{
    "vertices": [
        {
            "content": {
                "id": "166",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "167",
                "label": "Channel.fromPath([checkIfExists:true], $projectDir/assets/multiqc_config.yml)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"GStringExpression\":{\"verbatimText\":\"$projectDir/assets/multiqc_config.yml\",\"strings\":[{\"ConstantExpression\":\"\"},{\"ConstantExpression\":\"/assets/multiqc_config.yml\"}],\"values\":[{\"VariableExpression\":\"projectDir\"}]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "168",
                "label": "params.multiqc_config",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "169",
                "label": "params.multiqc_config",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "170",
                "label": "Channel.fromPath([checkIfExists:true], params.multiqc_config)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "171",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "172",
                "label": "(params.multiqc_config) ? Channel.fromPath([checkIfExists:true], params.multiqc_config) : Channel.empty()",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "173",
                "label": "params.multiqc_logo",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_logo\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "174",
                "label": "params.multiqc_logo",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "175",
                "label": "Channel.fromPath([checkIfExists:true], params.multiqc_logo)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_logo\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "176",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "177",
                "label": "(params.multiqc_logo) ? Channel.fromPath([checkIfExists:true], params.multiqc_logo) : Channel.empty()",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "178",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "179",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "180",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "181",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "182",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "183",
                "label": "params.fasta",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "184",
                "label": "params.fasta",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "185",
                "label": "Channel.value(this.file(params.fasta))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "186",
                "label": "Merge ch_fasta",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "187",
                "label": "(params.aligner == bismark)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "188",
                "label": "(params.aligner == bismark_hisat)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark_hisat\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "189",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "190",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "191",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "192",
                "label": "params.bismark_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "193",
                "label": "params.bismark_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "194",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "195",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "196",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "197",
                "label": "this.file(params.bismark_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "198",
                "label": "[[:], this.file(params.bismark_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "199",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "200",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "201",
                "label": "Channel.value(this.file(params.bismark_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "202",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "203",
                "label": "BISMARK_GENOMEPREPARATION",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_GENOMEPREPARATION\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/genomepreparation/main.nf",
                "unaliased": "BISMARK_GENOMEPREPARATION",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "204",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "205",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "206",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "207",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bwameth\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "208",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "209",
                "label": "(params.aligner == bwameth)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "210",
                "label": "params.bwa_meth_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "211",
                "label": "params.bwa_meth_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "212",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".tar.gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "213",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "214",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "215",
                "label": "this.file(params.bwa_meth_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "216",
                "label": "[[:], this.file(params.bwa_meth_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "217",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "218",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "219",
                "label": "Channel.value(this.file(params.bwa_meth_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "220",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "221",
                "label": "BWAMETH_INDEX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BWAMETH_INDEX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bwameth/index/main.nf",
                "unaliased": "BWAMETH_INDEX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "222",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "223",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "224",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "225",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "226",
                "label": "params.fasta_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "227",
                "label": "params.fasta_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "228",
                "label": "Channel.value(this.file(params.fasta_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "229",
                "label": "[[:], ch_fasta]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "230",
                "label": "SAMTOOLS_FAIDX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_FAIDX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gzi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "fai",
                    "gzi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/faidx/main.nf",
                "unaliased": "SAMTOOLS_FAIDX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "231",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "232",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "233",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "234",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "235",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "236",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "237",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "238",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "239",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "240",
                "label": "Merge UNTAR",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "241",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "242",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "243",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "244",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":null}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "245",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "246",
                "label": "Channel.fromSamplesheet(input)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromSamplesheet\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"input\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "247",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"NotExpression\":{\"VariableExpression\":\"fastq_2\"}}},\"ifBlock\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"+\",\"rightExpression\":{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"single_end\"},\"valueExpression\":{\"ConstantExpression\":true}}}]}}},{\"ListExpression\":[{\"VariableExpression\":\"fastq_1\"}]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"elseBlock\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"+\",\"rightExpression\":{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"single_end\"},\"valueExpression\":{\"ConstantExpression\":false}}}]}}},{\"ListExpression\":[{\"VariableExpression\":\"fastq_1\"},{\"VariableExpression\":\"fastq_2\"}]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq_1\",\"fastq_2\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "248",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "249",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_clone\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"method\":\"clone\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"parts\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}},\"method\":\"split\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"_\"}]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}},\"operation\":\"=\",\"rightExpression\":{\"TernaryExpression\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareGreaterThan\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"parts\"},\"property\":\"length\"}},{\"ConstantExpression\":1}]}}}}},\"trueExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"parts\"},\"operation\":\"[\",\"rightExpression\":{\"RangeExpression\":{\"from\":{\"ConstantExpression\":0},\"to\":{\"ConstantExpression\":-2},\"inclusive\":true}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"_\"}]}}}},\"falseExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}}}}}},\"labels\":[]}},{\"ReturnStatement\":{\"ListExpression\":[{\"VariableExpression\":\"meta_clone\"},{\"VariableExpression\":\"fastq\"}]}}],\"scope\":{\"declaredVariables\":[\"meta_clone\"],\"referencedClassVariables\":[\"parts\",\"compareGreaterThan\"]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "250",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"by\"},\"valueExpression\":{\"ListExpression\":[{\"ConstantExpression\":0}]}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "251",
                "label": "branch",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"branch\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareEqual\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"size\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":1}]}}}},\"labels\":[\"single\"]}},{\"ReturnStatement\":{\"ConstructorCallExpression\":{\"type\":\"nextflow.script.TokenBranchChoice\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},{\"ConstantExpression\":\"single\"}]}}}}},{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareGreaterThan\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"size\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":1}]}}}},\"labels\":[\"multiple\"]}},{\"ReturnStatement\":{\"ConstructorCallExpression\":{\"type\":\"nextflow.script.TokenBranchChoice\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},{\"ConstantExpression\":\"multiple\"}]}}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"single\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"single\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"multiple\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"multiple\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "single",
                    "multiple"
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "252",
                "label": "CAT_FASTQ",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"CAT_FASTQ\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"reads\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CAT_FASTQ\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CAT_FASTQ\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "reads",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/cat/fastq/main.nf",
                "unaliased": "CAT_FASTQ",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "253",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "254",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "255",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "256",
                "label": "FASTQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"FASTQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"zip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "html",
                    "zip",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/fastqc/main.nf",
                "unaliased": "FASTQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "257",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "258",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "259",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_trimming\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "260",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "261",
                "label": "params.skip_trimming",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "262",
                "label": "TRIMGALORE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"TRIMGALORE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"reads\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"_latch_placeholder_log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"unpaired\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"zip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "reads",
                    "log",
                    "unpaired",
                    "html",
                    "zip",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/trimgalore/main.nf",
                "unaliased": "TRIMGALORE",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "263",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "264",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "265",
                "label": "Merge reads",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "266",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "267",
                "label": "(params.aligner == bismark)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "268",
                "label": "(params.aligner == bismark_hisat)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark_hisat\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "269",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "270",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "271",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "272",
                "label": "(params.skip_deduplication || params.rrbs)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_deduplication\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"rrbs\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "273",
                "label": "(params.cytosine_report || params.nomeseq)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"cytosine_report\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"nomeseq\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "278",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "279",
                "label": "BISMARK_ALIGN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_ALIGN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"unmapped\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "report",
                    "unmapped",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/align/main.nf",
                "unaliased": "BISMARK_ALIGN",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "280",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "281",
                "label": "SAMTOOLS_SORT_ALIGNED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT_ALIGNED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "282",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "283",
                "label": "skip_deduplication",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "284",
                "label": "skip_deduplication",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "285",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"report\"},{\"ListExpression\":[]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"report\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "286",
                "label": "BISMARK_DEDUPLICATE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_DEDUPLICATE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "report",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/deduplicate/main.nf",
                "unaliased": "BISMARK_DEDUPLICATE",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "287",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "288",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "289",
                "label": "Merge alignments",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "290",
                "label": "Merge alignment_reports",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "291",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "292",
                "label": "BISMARK_METHYLATIONEXTRACTOR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_METHYLATIONEXTRACTOR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bedgraph\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"methylation_calls\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"coverage\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mbias\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bedgraph",
                    "methylation_calls",
                    "coverage",
                    "report",
                    "mbias",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/methylationextractor/main.nf",
                "unaliased": "BISMARK_METHYLATIONEXTRACTOR",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "293",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "294",
                "label": "cytosine_report",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "295",
                "label": "cytosine_report",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "296",
                "label": "BISMARK_COVERAGE2CYTOSINE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_COVERAGE2CYTOSINE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"coverage\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "coverage",
                    "report",
                    "summary",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/coverage2cytosine/main.nf",
                "unaliased": "BISMARK_COVERAGE2CYTOSINE",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "297",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "298",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "299",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "300",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "301",
                "label": "BISMARK_REPORT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_REPORT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_REPORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_REPORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/report/main.nf",
                "unaliased": "BISMARK_REPORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "302",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "303",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"property\":\"name\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "304",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "305",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "306",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "307",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "308",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "309",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "310",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "311",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "312",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "313",
                "label": "BISMARK_SUMMARY",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_SUMMARY\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_SUMMARY\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_SUMMARY\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "summary",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/summary/main.nf",
                "unaliased": "BISMARK_SUMMARY",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "314",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "315",
                "label": "SAMTOOLS_SORT_DEDUPLICATED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT_DEDUPLICATED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "316",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "317",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "318",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "319",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "320",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "321",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "322",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "323",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "324",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "325",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "326",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "327",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "328",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"it\"},\"property\":\"baseName\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "329",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "330",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bwameth\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "331",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "332",
                "label": "(params.aligner == bwameth)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "333",
                "label": "(params.skip_deduplication || params.rrbs)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_deduplication\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"rrbs\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "339",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "340",
                "label": "BWAMETH_ALIGN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BWAMETH_ALIGN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bwameth/align/main.nf",
                "unaliased": "BWAMETH_ALIGN",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "341",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "342",
                "label": "SAMTOOLS_SORT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "343",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "344",
                "label": "SAMTOOLS_INDEX_ALIGNMENTS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_INDEX_ALIGNMENTS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"crai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bai",
                    "csi",
                    "crai",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/index/main.nf",
                "unaliased": "SAMTOOLS_INDEX",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "345",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "346",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "347",
                "label": "SAMTOOLS_FLAGSTAT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_FLAGSTAT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"flagstat\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FLAGSTAT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FLAGSTAT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "flagstat",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/flagstat/main.nf",
                "unaliased": "SAMTOOLS_FLAGSTAT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "348",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "349",
                "label": "SAMTOOLS_STATS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_STATS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ListExpression\":[]}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"stats\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_STATS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_STATS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "stats",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/stats/main.nf",
                "unaliased": "SAMTOOLS_STATS",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "350",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "351",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "352",
                "label": "skip_deduplication",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "353",
                "label": "skip_deduplication",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "354",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "355",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "356",
                "label": "PICARD_MARKDUPLICATES",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"PICARD_MARKDUPLICATES\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"metrics\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "bai",
                    "metrics",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/picard/markduplicates/main.nf",
                "unaliased": "PICARD_MARKDUPLICATES",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "357",
                "label": "SAMTOOLS_INDEX_DEDUPLICATED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_INDEX_DEDUPLICATED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"crai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bai",
                    "csi",
                    "crai",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/index/main.nf",
                "unaliased": "SAMTOOLS_INDEX",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "358",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "359",
                "label": "Merge bam_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "360",
                "label": "Merge alignments",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "361",
                "label": "Merge picard_metrics",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "362",
                "label": "Merge picard_version",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "363",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "364",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "365",
                "label": "METHYLDACKEL_EXTRACT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"METHYLDACKEL_EXTRACT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bedgraph\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"methylkit\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bedgraph",
                    "methylkit",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/methyldackel/extract/main.nf",
                "unaliased": "METHYLDACKEL_EXTRACT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "366",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "367",
                "label": "METHYLDACKEL_MBIAS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"METHYLDACKEL_MBIAS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"txt\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_MBIAS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_MBIAS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "txt",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/methyldackel/mbias/main.nf",
                "unaliased": "METHYLDACKEL_MBIAS",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "368",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "369",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "370",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "371",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "372",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "373",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "374",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "375",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "376",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "377",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "378",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "379",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"it\"},\"property\":\"baseName\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "380",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "381",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "382",
                "label": "Merge ch_bam",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "383",
                "label": "Merge ch_aligner_mqc",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "384",
                "label": "Merge ch_dedup",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "385",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "386",
                "label": "params.bamqc_regions_file",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bamqc_regions_file\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "387",
                "label": "params.bamqc_regions_file",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "388",
                "label": "Channel.fromPath([checkIfExists:true], params.bamqc_regions_file)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bamqc_regions_file\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "389",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "390",
                "label": "[]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "391",
                "label": "(params.bamqc_regions_file) ? Channel.fromPath([checkIfExists:true], params.bamqc_regions_file).toList() : []",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "392",
                "label": "QUALIMAP_BAMQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"QUALIMAP_BAMQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"results\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"QUALIMAP_BAMQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"QUALIMAP_BAMQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "results",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/qualimap/bamqc/main.nf",
                "unaliased": "QUALIMAP_BAMQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "393",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "394",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "395",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "396",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"collated_versions.yml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "397",
                "label": "CUSTOM_DUMPSOFTWAREVERSIONS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"CUSTOM_DUMPSOFTWAREVERSIONS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mqc_yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "yml",
                    "mqc_yml",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/custom/dumpsoftwareversions/main.nf",
                "unaliased": "CUSTOM_DUMPSOFTWAREVERSIONS",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "398",
                "label": "params.skip_multiqc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_multiqc\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "399",
                "label": "params.skip_multiqc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "400",
                "label": "params.skip_multiqc",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "401",
                "label": "Channel.value(WorkflowMethylseq.paramsSummaryMultiqc(workflow, summary_params))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"WorkflowMethylseq\"},\"method\":\"paramsSummaryMultiqc\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"VariableExpression\":\"workflow\"},{\"VariableExpression\":\"summary_params\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "402",
                "label": "Channel.value(WorkflowMethylseq.methodsDescriptionText(workflow, ch_multiqc_custom_methods_description, params))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"WorkflowMethylseq\"},\"method\":\"methodsDescriptionText\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"VariableExpression\":\"workflow\"},{\"VariableExpression\":\"ch_multiqc_custom_methods_description\"},{\"VariableExpression\":\"params\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "403",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "404",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"workflow_summary_mqc.yaml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "405",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "406",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"methods_description_mqc.yaml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "407",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "408",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "409",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "410",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "411",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "412",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "413",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "414",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "415",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_trimming\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "416",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "417",
                "label": "params.skip_trimming",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "418",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "419",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "420",
                "label": "Merge ch_multiqc_files",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "421",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "422",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "423",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "424",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "425",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "426",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "427",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "428",
                "label": "MULTIQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"MULTIQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"data\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"plots\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "data",
                    "plots",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/multiqc/main.nf",
                "unaliased": "MULTIQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "429",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "430",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "431",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        }
    ],
    "edges": [
        {
            "content": {
                "label": "",
                "src": "168",
                "dest": "169",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "169",
                "dest": "170",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "169",
                "dest": "171",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "170",
                "dest": "172",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "171",
                "dest": "172",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "173",
                "dest": "174",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "174",
                "dest": "175",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "174",
                "dest": "176",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "175",
                "dest": "177",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "176",
                "dest": "177",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "183",
                "dest": "184",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "184",
                "dest": "185",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "185",
                "dest": "186",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "179",
                "dest": "186",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "187",
                "dest": "189",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "188",
                "dest": "189",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "189",
                "dest": "190",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "190",
                "dest": "191",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "192",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "193",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "192",
                "dest": "193",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "194",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "194",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "195",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "195",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "194",
                "dest": "195",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "196",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "196",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "195",
                "dest": "196",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "197",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "197",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "196",
                "dest": "197",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "198",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "198",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "196",
                "dest": "198",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "197",
                "dest": "198",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "199",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "199",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "196",
                "dest": "199",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "198",
                "dest": "199",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "200",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "200",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "196",
                "dest": "200",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "199",
                "dest": "200",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "201",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "201",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "196",
                "dest": "201",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "202",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "193",
                "dest": "202",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "200",
                "dest": "202",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "201",
                "dest": "202",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "203",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "193",
                "dest": "203",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "186",
                "dest": "203",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "204",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "193",
                "dest": "204",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "178",
                "dest": "204",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "203",
                "dest": "204",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "205",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "202",
                "dest": "205",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "203",
                "dest": "205",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "191",
                "dest": "206",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "178",
                "dest": "206",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "204",
                "dest": "206",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "207",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "208",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "207",
                "dest": "208",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "209",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "208",
                "dest": "209",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "210",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "210",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "211",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "211",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "210",
                "dest": "211",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "212",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "212",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "212",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "213",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "213",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "213",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "212",
                "dest": "213",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "214",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "214",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "214",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "213",
                "dest": "214",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "215",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "215",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "215",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "214",
                "dest": "215",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "216",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "216",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "216",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "214",
                "dest": "216",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "215",
                "dest": "216",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "217",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "217",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "217",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "214",
                "dest": "217",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "216",
                "dest": "217",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "218",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "218",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "218",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "214",
                "dest": "218",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "217",
                "dest": "218",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "219",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "219",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "219",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "214",
                "dest": "219",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "220",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "220",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "211",
                "dest": "220",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "218",
                "dest": "220",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "219",
                "dest": "220",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "221",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "221",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "211",
                "dest": "221",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "186",
                "dest": "221",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "222",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "222",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "211",
                "dest": "222",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "178",
                "dest": "222",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "221",
                "dest": "222",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "223",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "223",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "220",
                "dest": "223",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "180",
                "dest": "223",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "224",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "224",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "181",
                "dest": "224",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "221",
                "dest": "224",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "225",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "225",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "178",
                "dest": "225",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "222",
                "dest": "225",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "226",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "226",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "227",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "227",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "226",
                "dest": "227",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "228",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "228",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "227",
                "dest": "228",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "229",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "229",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "227",
                "dest": "229",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "186",
                "dest": "229",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "230",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "230",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "227",
                "dest": "230",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "229",
                "dest": "230",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "231",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "231",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "227",
                "dest": "231",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "230",
                "dest": "231",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "232",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "232",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "227",
                "dest": "232",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "225",
                "dest": "232",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "230",
                "dest": "232",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "233",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "233",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "228",
                "dest": "233",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "231",
                "dest": "233",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "234",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "209",
                "dest": "234",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "225",
                "dest": "234",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "232",
                "dest": "234",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "235",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "223",
                "dest": "235",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "180",
                "dest": "235",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "236",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "233",
                "dest": "236",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "182",
                "dest": "236",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "237",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "224",
                "dest": "237",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "181",
                "dest": "237",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "191",
                "dest": "238",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "234",
                "dest": "238",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "178",
                "dest": "238",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "205",
                "dest": "239",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "235",
                "dest": "239",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "199",
                "dest": "240",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "199",
                "dest": "240",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "217",
                "dest": "240",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "217",
                "dest": "240",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "206",
                "dest": "241",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "238",
                "dest": "241",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "182",
                "dest": "242",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "236",
                "dest": "242",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "181",
                "dest": "243",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "237",
                "dest": "243",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "241",
                "dest": "244",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "166",
                "dest": "245",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "244",
                "dest": "245",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "246",
                "dest": "247",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "247",
                "dest": "248",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "248",
                "dest": "249",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "249",
                "dest": "250",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "250",
                "dest": "251",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "251",
                "dest": "252",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "252",
                "dest": "253",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "251",
                "dest": "253",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "252",
                "dest": "254",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "245",
                "dest": "255",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "254",
                "dest": "255",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "253",
                "dest": "256",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "256",
                "dest": "257",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "255",
                "dest": "258",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "257",
                "dest": "258",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "259",
                "dest": "260",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "260",
                "dest": "261",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "261",
                "dest": "262",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "253",
                "dest": "262",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "261",
                "dest": "263",
                "branch": true
            }
        },
        {
            "content": {
                "label": "5",
                "src": "262",
                "dest": "263",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "261",
                "dest": "264",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "258",
                "dest": "264",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "263",
                "dest": "264",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "262",
                "dest": "265",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "253",
                "dest": "265",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "264",
                "dest": "266",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "258",
                "dest": "266",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "267",
                "dest": "269",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "268",
                "dest": "269",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "269",
                "dest": "270",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "270",
                "dest": "271",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "272",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "273",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "278",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "279",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "280",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "281",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "282",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "283",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "284",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "285",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "286",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "287",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "288",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "289",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "290",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "291",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "292",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "293",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "294",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "295",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "296",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "297",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "298",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "299",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "300",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "301",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "302",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "303",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "304",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "305",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "306",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "307",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "308",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "309",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "310",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "311",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "312",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "313",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "314",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "315",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "316",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "317",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "318",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "319",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "320",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "321",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "322",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "323",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "324",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "325",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "326",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "327",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "265",
                "dest": "279",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "239",
                "dest": "279",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "278",
                "dest": "280",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "279",
                "dest": "280",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "279",
                "dest": "281",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "280",
                "dest": "282",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "281",
                "dest": "282",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "272",
                "dest": "283",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "283",
                "dest": "284",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "284",
                "dest": "285",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "279",
                "dest": "285",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "284",
                "dest": "286",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "279",
                "dest": "286",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "284",
                "dest": "287",
                "branch": false
            }
        },
        {
            "content": {
                "label": "1",
                "src": "279",
                "dest": "287",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "286",
                "dest": "287",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "284",
                "dest": "288",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "282",
                "dest": "288",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "286",
                "dest": "288",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "279",
                "dest": "289",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "286",
                "dest": "289",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "285",
                "dest": "290",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "287",
                "dest": "290",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "282",
                "dest": "291",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "288",
                "dest": "291",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "289",
                "dest": "292",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "239",
                "dest": "292",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "291",
                "dest": "293",
                "branch": null
            }
        },
        {
            "content": {
                "label": "5",
                "src": "292",
                "dest": "293",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "273",
                "dest": "294",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "294",
                "dest": "295",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "295",
                "dest": "296",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "292",
                "dest": "296",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "239",
                "dest": "296",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "295",
                "dest": "297",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "293",
                "dest": "297",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "296",
                "dest": "297",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "297",
                "dest": "298",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "293",
                "dest": "298",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "290",
                "dest": "299",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "292",
                "dest": "299",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "299",
                "dest": "300",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "292",
                "dest": "300",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "300",
                "dest": "301",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "298",
                "dest": "302",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "301",
                "dest": "302",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "279",
                "dest": "303",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "303",
                "dest": "304",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "290",
                "dest": "305",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "305",
                "dest": "306",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "290",
                "dest": "307",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "307",
                "dest": "308",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "292",
                "dest": "309",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "309",
                "dest": "310",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "292",
                "dest": "311",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "311",
                "dest": "312",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "304",
                "dest": "313",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "306",
                "dest": "313",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "308",
                "dest": "313",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "310",
                "dest": "313",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "312",
                "dest": "313",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "302",
                "dest": "314",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "313",
                "dest": "314",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "289",
                "dest": "315",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "314",
                "dest": "316",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "315",
                "dest": "316",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "313",
                "dest": "317",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "290",
                "dest": "318",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "317",
                "dest": "319",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "318",
                "dest": "319",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "290",
                "dest": "320",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "319",
                "dest": "321",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "320",
                "dest": "321",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "292",
                "dest": "322",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "321",
                "dest": "323",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "322",
                "dest": "323",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "292",
                "dest": "324",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "323",
                "dest": "325",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "324",
                "dest": "325",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "301",
                "dest": "326",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "325",
                "dest": "327",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "326",
                "dest": "327",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "328",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "316",
                "dest": "328",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "271",
                "dest": "329",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "266",
                "dest": "329",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "328",
                "dest": "329",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "330",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "331",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "330",
                "dest": "331",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "332",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "331",
                "dest": "332",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "333",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "333",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "339",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "339",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "340",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "340",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "341",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "341",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "342",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "342",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "343",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "343",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "344",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "344",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "345",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "345",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "346",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "346",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "347",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "347",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "348",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "348",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "349",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "349",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "350",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "350",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "351",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "351",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "352",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "352",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "353",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "353",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "354",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "354",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "355",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "355",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "356",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "356",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "357",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "357",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "358",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "358",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "359",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "359",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "360",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "360",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "361",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "361",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "362",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "362",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "363",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "363",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "364",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "364",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "365",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "365",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "366",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "366",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "367",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "367",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "368",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "368",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "369",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "369",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "370",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "370",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "371",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "371",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "372",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "372",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "373",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "373",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "374",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "374",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "375",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "375",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "376",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "376",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "377",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "377",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "378",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "378",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "265",
                "dest": "340",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "243",
                "dest": "340",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "339",
                "dest": "341",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "340",
                "dest": "341",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "340",
                "dest": "342",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "341",
                "dest": "343",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "342",
                "dest": "343",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "342",
                "dest": "344",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "343",
                "dest": "345",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "344",
                "dest": "345",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "340",
                "dest": "346",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "344",
                "dest": "346",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "346",
                "dest": "347",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "340",
                "dest": "348",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "344",
                "dest": "348",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "348",
                "dest": "349",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "345",
                "dest": "350",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "347",
                "dest": "350",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "350",
                "dest": "351",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "349",
                "dest": "351",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "333",
                "dest": "352",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "352",
                "dest": "353",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "353",
                "dest": "354",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "353",
                "dest": "355",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "353",
                "dest": "356",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "342",
                "dest": "356",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "186",
                "dest": "356",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "242",
                "dest": "356",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "353",
                "dest": "357",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "356",
                "dest": "357",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "353",
                "dest": "358",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "351",
                "dest": "358",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "356",
                "dest": "358",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "344",
                "dest": "359",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "357",
                "dest": "359",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "342",
                "dest": "360",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "356",
                "dest": "360",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "354",
                "dest": "361",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "356",
                "dest": "361",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "355",
                "dest": "362",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "356",
                "dest": "362",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "351",
                "dest": "363",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "358",
                "dest": "363",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "360",
                "dest": "364",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "359",
                "dest": "364",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "364",
                "dest": "365",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "186",
                "dest": "365",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "242",
                "dest": "365",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "360",
                "dest": "366",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "359",
                "dest": "366",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "366",
                "dest": "367",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "186",
                "dest": "367",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "242",
                "dest": "367",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "363",
                "dest": "368",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "365",
                "dest": "368",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "368",
                "dest": "369",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "367",
                "dest": "369",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "361",
                "dest": "370",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "347",
                "dest": "371",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "370",
                "dest": "372",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "371",
                "dest": "372",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "349",
                "dest": "373",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "372",
                "dest": "374",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "373",
                "dest": "374",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "365",
                "dest": "375",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "374",
                "dest": "376",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "375",
                "dest": "376",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "367",
                "dest": "377",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "376",
                "dest": "378",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "377",
                "dest": "378",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "379",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "379",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "369",
                "dest": "379",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "380",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "332",
                "dest": "380",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "266",
                "dest": "380",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "379",
                "dest": "380",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "271",
                "dest": "381",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "380",
                "dest": "381",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "266",
                "dest": "381",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "281",
                "dest": "382",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "342",
                "dest": "382",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "327",
                "dest": "383",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "378",
                "dest": "383",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "315",
                "dest": "384",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "360",
                "dest": "384",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "329",
                "dest": "385",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "381",
                "dest": "385",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "386",
                "dest": "387",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "387",
                "dest": "388",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "387",
                "dest": "389",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "388",
                "dest": "389",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: false",
                "src": "387",
                "dest": "390",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "389",
                "dest": "391",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "390",
                "dest": "391",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "384",
                "dest": "392",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "391",
                "dest": "392",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "392",
                "dest": "393",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "385",
                "dest": "394",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "393",
                "dest": "394",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "394",
                "dest": "395",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "395",
                "dest": "396",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "396",
                "dest": "397",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "398",
                "dest": "399",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "399",
                "dest": "400",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "401",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "402",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "403",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "404",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "401",
                "dest": "404",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "405",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "403",
                "dest": "405",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "404",
                "dest": "405",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "406",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "402",
                "dest": "406",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "407",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "405",
                "dest": "407",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "406",
                "dest": "407",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "408",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "397",
                "dest": "408",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "409",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "407",
                "dest": "409",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "408",
                "dest": "409",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "410",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "392",
                "dest": "410",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "411",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "410",
                "dest": "411",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "412",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "409",
                "dest": "412",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "411",
                "dest": "412",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "413",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "383",
                "dest": "413",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "414",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "412",
                "dest": "414",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "413",
                "dest": "414",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "415",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "416",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "415",
                "dest": "416",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "417",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "416",
                "dest": "417",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "418",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "417",
                "dest": "418",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "262",
                "dest": "418",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "419",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "417",
                "dest": "419",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "414",
                "dest": "419",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "418",
                "dest": "419",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "420",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "419",
                "dest": "420",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "414",
                "dest": "420",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "421",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "256",
                "dest": "421",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "422",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "421",
                "dest": "422",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "423",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "420",
                "dest": "423",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "422",
                "dest": "423",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "424",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "423",
                "dest": "424",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "425",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "167",
                "dest": "425",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "426",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "172",
                "dest": "426",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "427",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "177",
                "dest": "427",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "428",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "424",
                "dest": "428",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "425",
                "dest": "428",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "426",
                "dest": "428",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "427",
                "dest": "428",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "429",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "428",
                "dest": "429",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: (condition = Channel.placeholder()) - Branch: true",
                "src": "400",
                "dest": "430",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "394",
                "dest": "430",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "428",
                "dest": "430",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "430",
                "dest": "431",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "394",
                "dest": "431",
                "branch": null
            }
        }
    ]
}