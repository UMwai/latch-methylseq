{
    "vertices": [
        {
            "content": {
                "id": "432",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "433",
                "label": "Channel.fromPath([checkIfExists:true], $projectDir/assets/multiqc_config.yml)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"GStringExpression\":{\"verbatimText\":\"$projectDir/assets/multiqc_config.yml\",\"strings\":[{\"ConstantExpression\":\"\"},{\"ConstantExpression\":\"/assets/multiqc_config.yml\"}],\"values\":[{\"VariableExpression\":\"projectDir\"}]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "434",
                "label": "params.multiqc_config",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "435",
                "label": "params.multiqc_config",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "436",
                "label": "Channel.fromPath([checkIfExists:true], params.multiqc_config)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "437",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "438",
                "label": "(params.multiqc_config) ? Channel.fromPath([checkIfExists:true], params.multiqc_config) : Channel.empty()",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "439",
                "label": "params.multiqc_logo",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_logo\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "440",
                "label": "params.multiqc_logo",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "441",
                "label": "Channel.fromPath([checkIfExists:true], params.multiqc_logo)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_logo\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "442",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "443",
                "label": "(params.multiqc_logo) ? Channel.fromPath([checkIfExists:true], params.multiqc_logo) : Channel.empty()",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "444",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "445",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "446",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "447",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "448",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "449",
                "label": "params.fasta",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "450",
                "label": "params.fasta",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "451",
                "label": "Channel.value(this.file(params.fasta))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "452",
                "label": "Merge ch_fasta",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "453",
                "label": "(params.aligner == bismark)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "454",
                "label": "(params.aligner == bismark_hisat)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark_hisat\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "455",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "456",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "457",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "458",
                "label": "params.bismark_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "459",
                "label": "params.bismark_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "460",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "461",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "462",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "463",
                "label": "this.file(params.bismark_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "464",
                "label": "[[:], this.file(params.bismark_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "465",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "466",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "467",
                "label": "Channel.value(this.file(params.bismark_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "468",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "469",
                "label": "BISMARK_GENOMEPREPARATION",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_GENOMEPREPARATION\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/genomepreparation/main.nf",
                "unaliased": "BISMARK_GENOMEPREPARATION",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "470",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "471",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "472",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "473",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bwameth\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "474",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "475",
                "label": "(params.aligner == bwameth)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "476",
                "label": "params.bwa_meth_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "477",
                "label": "params.bwa_meth_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "478",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".tar.gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "479",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "480",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "481",
                "label": "this.file(params.bwa_meth_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "482",
                "label": "[[:], this.file(params.bwa_meth_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "483",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "484",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "485",
                "label": "Channel.value(this.file(params.bwa_meth_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "486",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "487",
                "label": "BWAMETH_INDEX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BWAMETH_INDEX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bwameth/index/main.nf",
                "unaliased": "BWAMETH_INDEX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "488",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "489",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "490",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "491",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "492",
                "label": "params.fasta_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "493",
                "label": "params.fasta_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "494",
                "label": "Channel.value(this.file(params.fasta_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "495",
                "label": "[[:], ch_fasta]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "496",
                "label": "SAMTOOLS_FAIDX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_FAIDX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gzi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "fai",
                    "gzi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/faidx/main.nf",
                "unaliased": "SAMTOOLS_FAIDX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "497",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "498",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "499",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "500",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "501",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "502",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "503",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "504",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "505",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "506",
                "label": "Merge UNTAR",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "507",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "508",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "509",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "510",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":null}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "511",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "512",
                "label": "Channel.fromSamplesheet(input)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromSamplesheet\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"input\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "513",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"NotExpression\":{\"VariableExpression\":\"fastq_2\"}}},\"ifBlock\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"+\",\"rightExpression\":{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"single_end\"},\"valueExpression\":{\"ConstantExpression\":true}}}]}}},{\"ListExpression\":[{\"VariableExpression\":\"fastq_1\"}]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"elseBlock\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"+\",\"rightExpression\":{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"single_end\"},\"valueExpression\":{\"ConstantExpression\":false}}}]}}},{\"ListExpression\":[{\"VariableExpression\":\"fastq_1\"},{\"VariableExpression\":\"fastq_2\"}]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq_1\",\"fastq_2\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "514",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "515",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_clone\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"method\":\"clone\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"parts\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}},\"method\":\"split\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"_\"}]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}},\"operation\":\"=\",\"rightExpression\":{\"TernaryExpression\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareGreaterThan\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"parts\"},\"property\":\"length\"}},{\"ConstantExpression\":1}]}}}}},\"trueExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"parts\"},\"operation\":\"[\",\"rightExpression\":{\"RangeExpression\":{\"from\":{\"ConstantExpression\":0},\"to\":{\"ConstantExpression\":-2},\"inclusive\":true}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"_\"}]}}}},\"falseExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}}}}}},\"labels\":[]}},{\"ReturnStatement\":{\"ListExpression\":[{\"VariableExpression\":\"meta_clone\"},{\"VariableExpression\":\"fastq\"}]}}],\"scope\":{\"declaredVariables\":[\"meta_clone\"],\"referencedClassVariables\":[\"parts\",\"compareGreaterThan\"]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "516",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"by\"},\"valueExpression\":{\"ListExpression\":[{\"ConstantExpression\":0}]}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "517",
                "label": "branch",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"branch\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareEqual\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"size\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":1}]}}}},\"labels\":[\"single\"]}},{\"ReturnStatement\":{\"ConstructorCallExpression\":{\"type\":\"nextflow.script.TokenBranchChoice\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},{\"ConstantExpression\":\"single\"}]}}}}},{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareGreaterThan\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"size\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":1}]}}}},\"labels\":[\"multiple\"]}},{\"ReturnStatement\":{\"ConstructorCallExpression\":{\"type\":\"nextflow.script.TokenBranchChoice\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},{\"ConstantExpression\":\"multiple\"}]}}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"single\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"single\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"multiple\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"multiple\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "single",
                    "multiple"
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "518",
                "label": "CAT_FASTQ",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"CAT_FASTQ\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"reads\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CAT_FASTQ\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CAT_FASTQ\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "reads",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/cat/fastq/main.nf",
                "unaliased": "CAT_FASTQ",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "519",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "520",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "521",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "522",
                "label": "FASTQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"FASTQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"zip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "html",
                    "zip",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/fastqc/main.nf",
                "unaliased": "FASTQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "523",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "524",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "525",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_trimming\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "526",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "527",
                "label": "params.skip_trimming",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "528",
                "label": "TRIMGALORE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"TRIMGALORE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"reads\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"_latch_placeholder_log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"unpaired\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"zip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "reads",
                    "log",
                    "unpaired",
                    "html",
                    "zip",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/trimgalore/main.nf",
                "unaliased": "TRIMGALORE",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "529",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "530",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "531",
                "label": "Merge reads",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "532",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "533",
                "label": "(params.aligner == bismark)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "534",
                "label": "(params.aligner == bismark_hisat)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark_hisat\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "535",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "536",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "537",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "538",
                "label": "(params.skip_deduplication || params.rrbs)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_deduplication\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"rrbs\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "539",
                "label": "(params.cytosine_report || params.nomeseq)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"cytosine_report\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"nomeseq\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "540",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "541",
                "label": "BISMARK_ALIGN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_ALIGN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"unmapped\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "report",
                    "unmapped",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/align/main.nf",
                "unaliased": "BISMARK_ALIGN",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "542",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "543",
                "label": "SAMTOOLS_SORT_ALIGNED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT_ALIGNED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "544",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "545",
                "label": "skip_deduplication",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "546",
                "label": "skip_deduplication",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "547",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"report\"},{\"ListExpression\":[]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"report\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "548",
                "label": "BISMARK_DEDUPLICATE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_DEDUPLICATE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "report",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/deduplicate/main.nf",
                "unaliased": "BISMARK_DEDUPLICATE",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "549",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "550",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "551",
                "label": "Merge alignments",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "552",
                "label": "Merge alignment_reports",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "553",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "554",
                "label": "BISMARK_METHYLATIONEXTRACTOR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_METHYLATIONEXTRACTOR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bedgraph\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"methylation_calls\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"coverage\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mbias\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bedgraph",
                    "methylation_calls",
                    "coverage",
                    "report",
                    "mbias",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/methylationextractor/main.nf",
                "unaliased": "BISMARK_METHYLATIONEXTRACTOR",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "555",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "556",
                "label": "cytosine_report",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "557",
                "label": "cytosine_report",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "558",
                "label": "BISMARK_COVERAGE2CYTOSINE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_COVERAGE2CYTOSINE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"coverage\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "coverage",
                    "report",
                    "summary",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/coverage2cytosine/main.nf",
                "unaliased": "BISMARK_COVERAGE2CYTOSINE",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "559",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "560",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "561",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "562",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "563",
                "label": "BISMARK_REPORT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_REPORT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_REPORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_REPORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/report/main.nf",
                "unaliased": "BISMARK_REPORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "564",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "565",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"property\":\"name\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "566",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "567",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "568",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "569",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "570",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "571",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "572",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "573",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "574",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "575",
                "label": "BISMARK_SUMMARY",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_SUMMARY\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_SUMMARY\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_SUMMARY\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "summary",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/summary/main.nf",
                "unaliased": "BISMARK_SUMMARY",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "576",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "577",
                "label": "SAMTOOLS_SORT_DEDUPLICATED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT_DEDUPLICATED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "578",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "579",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "580",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "581",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "582",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "583",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "584",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "585",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "586",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "587",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "588",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "589",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "590",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"it\"},\"property\":\"baseName\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "591",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "592",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bwameth\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "593",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "594",
                "label": "(params.aligner == bwameth)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "595",
                "label": "(params.skip_deduplication || params.rrbs)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_deduplication\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"rrbs\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "596",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "597",
                "label": "BWAMETH_ALIGN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BWAMETH_ALIGN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bwameth/align/main.nf",
                "unaliased": "BWAMETH_ALIGN",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "598",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "599",
                "label": "SAMTOOLS_SORT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "600",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "601",
                "label": "SAMTOOLS_INDEX_ALIGNMENTS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_INDEX_ALIGNMENTS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"crai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bai",
                    "csi",
                    "crai",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/index/main.nf",
                "unaliased": "SAMTOOLS_INDEX",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "602",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "603",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "604",
                "label": "SAMTOOLS_FLAGSTAT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_FLAGSTAT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"flagstat\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FLAGSTAT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FLAGSTAT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "flagstat",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/flagstat/main.nf",
                "unaliased": "SAMTOOLS_FLAGSTAT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "605",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "606",
                "label": "SAMTOOLS_STATS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_STATS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ListExpression\":[]}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"stats\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_STATS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_STATS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "stats",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/stats/main.nf",
                "unaliased": "SAMTOOLS_STATS",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "607",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "608",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "609",
                "label": "skip_deduplication",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "610",
                "label": "skip_deduplication",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "611",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "612",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "613",
                "label": "PICARD_MARKDUPLICATES",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"PICARD_MARKDUPLICATES\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"metrics\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "bai",
                    "metrics",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/picard/markduplicates/main.nf",
                "unaliased": "PICARD_MARKDUPLICATES",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "614",
                "label": "SAMTOOLS_INDEX_DEDUPLICATED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_INDEX_DEDUPLICATED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"crai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bai",
                    "csi",
                    "crai",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/index/main.nf",
                "unaliased": "SAMTOOLS_INDEX",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "615",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "616",
                "label": "Merge bam_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "617",
                "label": "Merge alignments",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "618",
                "label": "Merge picard_metrics",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "619",
                "label": "Merge picard_version",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "620",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "621",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "622",
                "label": "METHYLDACKEL_EXTRACT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"METHYLDACKEL_EXTRACT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bedgraph\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"methylkit\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bedgraph",
                    "methylkit",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/methyldackel/extract/main.nf",
                "unaliased": "METHYLDACKEL_EXTRACT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "623",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "624",
                "label": "METHYLDACKEL_MBIAS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"METHYLDACKEL_MBIAS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"txt\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_MBIAS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_MBIAS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "txt",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/methyldackel/mbias/main.nf",
                "unaliased": "METHYLDACKEL_MBIAS",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "625",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "626",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "627",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "628",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "629",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "630",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "631",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "632",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "633",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "634",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "635",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "636",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"it\"},\"property\":\"baseName\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "637",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "638",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "639",
                "label": "Merge ch_bam",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "640",
                "label": "Merge ch_aligner_mqc",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "641",
                "label": "Merge ch_dedup",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "642",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "643",
                "label": "params.bamqc_regions_file",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bamqc_regions_file\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "644",
                "label": "params.bamqc_regions_file",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "645",
                "label": "Channel.fromPath([checkIfExists:true], params.bamqc_regions_file)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bamqc_regions_file\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "646",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "647",
                "label": "[]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "648",
                "label": "(params.bamqc_regions_file) ? Channel.fromPath([checkIfExists:true], params.bamqc_regions_file).toList() : []",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "649",
                "label": "QUALIMAP_BAMQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"QUALIMAP_BAMQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"results\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"QUALIMAP_BAMQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"QUALIMAP_BAMQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "results",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/qualimap/bamqc/main.nf",
                "unaliased": "QUALIMAP_BAMQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "650",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "651",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "652",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "653",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"collated_versions.yml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "654",
                "label": "CUSTOM_DUMPSOFTWAREVERSIONS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"CUSTOM_DUMPSOFTWAREVERSIONS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mqc_yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "yml",
                    "mqc_yml",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/custom/dumpsoftwareversions/main.nf",
                "unaliased": "CUSTOM_DUMPSOFTWAREVERSIONS",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "655",
                "label": "params.skip_multiqc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_multiqc\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "656",
                "label": "params.skip_multiqc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "657",
                "label": "params.skip_multiqc",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "658",
                "label": "Channel.value(WorkflowMethylseq.paramsSummaryMultiqc(workflow, summary_params))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"WorkflowMethylseq\"},\"method\":\"paramsSummaryMultiqc\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"VariableExpression\":\"workflow\"},{\"VariableExpression\":\"summary_params\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "659",
                "label": "Channel.value(WorkflowMethylseq.methodsDescriptionText(workflow, ch_multiqc_custom_methods_description, params))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"WorkflowMethylseq\"},\"method\":\"methodsDescriptionText\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"VariableExpression\":\"workflow\"},{\"VariableExpression\":\"ch_multiqc_custom_methods_description\"},{\"VariableExpression\":\"params\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "660",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "661",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"workflow_summary_mqc.yaml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "662",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "663",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"methods_description_mqc.yaml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "664",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "665",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "666",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "667",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "668",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "669",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "670",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "671",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "672",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_trimming\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "673",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "674",
                "label": "params.skip_trimming",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "675",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "676",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "677",
                "label": "Merge ch_multiqc_files",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "678",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "679",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "680",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "681",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "682",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "683",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "684",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "685",
                "label": "MULTIQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"MULTIQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"data\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"plots\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "data",
                    "plots",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/multiqc/main.nf",
                "unaliased": "MULTIQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "686",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "687",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "688",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        }
    ],
    "edges": [
        {
            "content": {
                "label": "",
                "src": "434",
                "dest": "435",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "435",
                "dest": "436",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "435",
                "dest": "437",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "436",
                "dest": "438",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "437",
                "dest": "438",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "439",
                "dest": "440",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "440",
                "dest": "441",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "440",
                "dest": "442",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "441",
                "dest": "443",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "442",
                "dest": "443",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "449",
                "dest": "450",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "450",
                "dest": "451",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "451",
                "dest": "452",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "445",
                "dest": "452",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "453",
                "dest": "455",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "454",
                "dest": "455",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "455",
                "dest": "456",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "456",
                "dest": "457",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "458",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "459",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "458",
                "dest": "459",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "460",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "460",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "461",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "461",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "460",
                "dest": "461",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "462",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "462",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "461",
                "dest": "462",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "463",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "463",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "462",
                "dest": "463",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "464",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "464",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "462",
                "dest": "464",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "463",
                "dest": "464",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "465",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "465",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "462",
                "dest": "465",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "464",
                "dest": "465",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "466",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "466",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "462",
                "dest": "466",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "465",
                "dest": "466",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "467",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "467",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "462",
                "dest": "467",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "468",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "459",
                "dest": "468",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "466",
                "dest": "468",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "467",
                "dest": "468",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "469",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "459",
                "dest": "469",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "452",
                "dest": "469",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "470",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "459",
                "dest": "470",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "444",
                "dest": "470",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "469",
                "dest": "470",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "471",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "468",
                "dest": "471",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "469",
                "dest": "471",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "457",
                "dest": "472",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "444",
                "dest": "472",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "470",
                "dest": "472",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "473",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "474",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "473",
                "dest": "474",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "475",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "474",
                "dest": "475",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "476",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "476",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "477",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "477",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "476",
                "dest": "477",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "478",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "478",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "478",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "479",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "479",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "479",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "478",
                "dest": "479",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "480",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "480",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "480",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "479",
                "dest": "480",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "481",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "481",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "481",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "480",
                "dest": "481",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "482",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "482",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "482",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "480",
                "dest": "482",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "481",
                "dest": "482",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "483",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "483",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "483",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "480",
                "dest": "483",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "482",
                "dest": "483",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "484",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "484",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "484",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "480",
                "dest": "484",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "483",
                "dest": "484",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "485",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "485",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "485",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "480",
                "dest": "485",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "486",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "486",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "477",
                "dest": "486",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "484",
                "dest": "486",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "485",
                "dest": "486",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "487",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "487",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "477",
                "dest": "487",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "452",
                "dest": "487",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "488",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "488",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "477",
                "dest": "488",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "444",
                "dest": "488",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "487",
                "dest": "488",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "489",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "489",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "486",
                "dest": "489",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "446",
                "dest": "489",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "490",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "490",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "447",
                "dest": "490",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "487",
                "dest": "490",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "491",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "491",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "444",
                "dest": "491",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "488",
                "dest": "491",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "492",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "492",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "493",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "493",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "492",
                "dest": "493",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "494",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "494",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "493",
                "dest": "494",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "495",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "495",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "493",
                "dest": "495",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "452",
                "dest": "495",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "496",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "496",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "493",
                "dest": "496",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "495",
                "dest": "496",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "497",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "497",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "493",
                "dest": "497",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "496",
                "dest": "497",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "498",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "498",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "493",
                "dest": "498",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "491",
                "dest": "498",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "496",
                "dest": "498",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "499",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "499",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "494",
                "dest": "499",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "497",
                "dest": "499",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "500",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "475",
                "dest": "500",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "491",
                "dest": "500",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "498",
                "dest": "500",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "501",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "489",
                "dest": "501",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "446",
                "dest": "501",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "502",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "499",
                "dest": "502",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "448",
                "dest": "502",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "503",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "490",
                "dest": "503",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "447",
                "dest": "503",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "457",
                "dest": "504",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "500",
                "dest": "504",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "444",
                "dest": "504",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "471",
                "dest": "505",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "501",
                "dest": "505",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "465",
                "dest": "506",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "465",
                "dest": "506",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "483",
                "dest": "506",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "483",
                "dest": "506",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "472",
                "dest": "507",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "504",
                "dest": "507",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "448",
                "dest": "508",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "502",
                "dest": "508",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "447",
                "dest": "509",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "503",
                "dest": "509",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "507",
                "dest": "510",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "432",
                "dest": "511",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "510",
                "dest": "511",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "512",
                "dest": "513",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "513",
                "dest": "514",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "514",
                "dest": "515",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "515",
                "dest": "516",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "516",
                "dest": "517",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "517",
                "dest": "518",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "518",
                "dest": "519",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "517",
                "dest": "519",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "518",
                "dest": "520",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "511",
                "dest": "521",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "520",
                "dest": "521",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "519",
                "dest": "522",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "522",
                "dest": "523",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "521",
                "dest": "524",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "523",
                "dest": "524",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "525",
                "dest": "526",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "526",
                "dest": "527",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "527",
                "dest": "528",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "519",
                "dest": "528",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "527",
                "dest": "529",
                "branch": true
            }
        },
        {
            "content": {
                "label": "5",
                "src": "528",
                "dest": "529",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "527",
                "dest": "530",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "524",
                "dest": "530",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "529",
                "dest": "530",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "528",
                "dest": "531",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "519",
                "dest": "531",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "530",
                "dest": "532",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "524",
                "dest": "532",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "533",
                "dest": "535",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "534",
                "dest": "535",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "535",
                "dest": "536",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "536",
                "dest": "537",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "538",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "539",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "540",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "541",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "542",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "543",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "544",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "545",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "546",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "547",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "548",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "549",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "550",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "551",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "552",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "553",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "554",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "555",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "556",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "557",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "558",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "559",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "560",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "561",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "562",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "563",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "564",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "565",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "566",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "567",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "568",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "569",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "570",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "571",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "572",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "573",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "574",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "575",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "576",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "577",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "578",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "579",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "580",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "581",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "582",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "583",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "584",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "585",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "586",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "587",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "588",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "589",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "531",
                "dest": "541",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "505",
                "dest": "541",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "540",
                "dest": "542",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "541",
                "dest": "542",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "541",
                "dest": "543",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "542",
                "dest": "544",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "543",
                "dest": "544",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "538",
                "dest": "545",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "545",
                "dest": "546",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "546",
                "dest": "547",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "541",
                "dest": "547",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "546",
                "dest": "548",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "541",
                "dest": "548",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "546",
                "dest": "549",
                "branch": false
            }
        },
        {
            "content": {
                "label": "1",
                "src": "541",
                "dest": "549",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "548",
                "dest": "549",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "546",
                "dest": "550",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "544",
                "dest": "550",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "548",
                "dest": "550",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "541",
                "dest": "551",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "548",
                "dest": "551",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "547",
                "dest": "552",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "549",
                "dest": "552",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "544",
                "dest": "553",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "550",
                "dest": "553",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "551",
                "dest": "554",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "505",
                "dest": "554",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "553",
                "dest": "555",
                "branch": null
            }
        },
        {
            "content": {
                "label": "5",
                "src": "554",
                "dest": "555",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "539",
                "dest": "556",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "556",
                "dest": "557",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "557",
                "dest": "558",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "554",
                "dest": "558",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "505",
                "dest": "558",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "557",
                "dest": "559",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "555",
                "dest": "559",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "558",
                "dest": "559",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "559",
                "dest": "560",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "555",
                "dest": "560",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "552",
                "dest": "561",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "554",
                "dest": "561",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "561",
                "dest": "562",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "554",
                "dest": "562",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "562",
                "dest": "563",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "560",
                "dest": "564",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "563",
                "dest": "564",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "541",
                "dest": "565",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "565",
                "dest": "566",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "552",
                "dest": "567",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "567",
                "dest": "568",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "552",
                "dest": "569",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "569",
                "dest": "570",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "554",
                "dest": "571",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "571",
                "dest": "572",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "554",
                "dest": "573",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "573",
                "dest": "574",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "566",
                "dest": "575",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "568",
                "dest": "575",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "570",
                "dest": "575",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "572",
                "dest": "575",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "574",
                "dest": "575",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "564",
                "dest": "576",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "575",
                "dest": "576",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "551",
                "dest": "577",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "576",
                "dest": "578",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "577",
                "dest": "578",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "575",
                "dest": "579",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "552",
                "dest": "580",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "579",
                "dest": "581",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "580",
                "dest": "581",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "552",
                "dest": "582",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "581",
                "dest": "583",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "582",
                "dest": "583",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "554",
                "dest": "584",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "583",
                "dest": "585",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "584",
                "dest": "585",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "554",
                "dest": "586",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "585",
                "dest": "587",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "586",
                "dest": "587",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "563",
                "dest": "588",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "587",
                "dest": "589",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "588",
                "dest": "589",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "590",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "578",
                "dest": "590",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "537",
                "dest": "591",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "532",
                "dest": "591",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "590",
                "dest": "591",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "592",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "593",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "592",
                "dest": "593",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "594",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "593",
                "dest": "594",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "595",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "595",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "596",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "596",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "597",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "597",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "598",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "598",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "599",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "599",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "600",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "600",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "601",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "601",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "602",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "602",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "603",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "603",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "604",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "604",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "605",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "605",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "606",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "606",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "607",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "607",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "608",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "608",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "609",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "609",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "610",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "610",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "611",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "611",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "612",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "612",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "613",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "613",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "614",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "614",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "615",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "615",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "616",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "616",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "617",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "617",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "618",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "618",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "619",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "619",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "620",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "620",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "621",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "621",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "622",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "622",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "623",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "623",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "624",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "624",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "625",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "625",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "626",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "626",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "627",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "627",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "628",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "628",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "629",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "629",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "630",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "630",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "631",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "631",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "632",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "632",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "633",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "633",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "634",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "634",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "635",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "635",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "531",
                "dest": "597",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "509",
                "dest": "597",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "596",
                "dest": "598",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "597",
                "dest": "598",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "597",
                "dest": "599",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "598",
                "dest": "600",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "599",
                "dest": "600",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "599",
                "dest": "601",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "600",
                "dest": "602",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "601",
                "dest": "602",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "597",
                "dest": "603",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "601",
                "dest": "603",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "603",
                "dest": "604",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "597",
                "dest": "605",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "601",
                "dest": "605",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "605",
                "dest": "606",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "602",
                "dest": "607",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "604",
                "dest": "607",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "607",
                "dest": "608",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "606",
                "dest": "608",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "595",
                "dest": "609",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "609",
                "dest": "610",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "610",
                "dest": "611",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "610",
                "dest": "612",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "610",
                "dest": "613",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "599",
                "dest": "613",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "452",
                "dest": "613",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "508",
                "dest": "613",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "610",
                "dest": "614",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "613",
                "dest": "614",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "610",
                "dest": "615",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "608",
                "dest": "615",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "613",
                "dest": "615",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "601",
                "dest": "616",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "614",
                "dest": "616",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "599",
                "dest": "617",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "613",
                "dest": "617",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "611",
                "dest": "618",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "613",
                "dest": "618",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "612",
                "dest": "619",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "613",
                "dest": "619",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "608",
                "dest": "620",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "615",
                "dest": "620",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "617",
                "dest": "621",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "616",
                "dest": "621",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "621",
                "dest": "622",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "452",
                "dest": "622",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "508",
                "dest": "622",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "617",
                "dest": "623",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "616",
                "dest": "623",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "623",
                "dest": "624",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "452",
                "dest": "624",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "508",
                "dest": "624",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "620",
                "dest": "625",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "622",
                "dest": "625",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "625",
                "dest": "626",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "624",
                "dest": "626",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "618",
                "dest": "627",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "604",
                "dest": "628",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "627",
                "dest": "629",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "628",
                "dest": "629",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "606",
                "dest": "630",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "629",
                "dest": "631",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "630",
                "dest": "631",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "622",
                "dest": "632",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "631",
                "dest": "633",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "632",
                "dest": "633",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "624",
                "dest": "634",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "633",
                "dest": "635",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "634",
                "dest": "635",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "636",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "636",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "626",
                "dest": "636",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "637",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "594",
                "dest": "637",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "532",
                "dest": "637",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "636",
                "dest": "637",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "537",
                "dest": "638",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "637",
                "dest": "638",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "532",
                "dest": "638",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "543",
                "dest": "639",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "599",
                "dest": "639",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "589",
                "dest": "640",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "635",
                "dest": "640",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "577",
                "dest": "641",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "617",
                "dest": "641",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "591",
                "dest": "642",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "638",
                "dest": "642",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "643",
                "dest": "644",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "644",
                "dest": "645",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "644",
                "dest": "646",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "645",
                "dest": "646",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "644",
                "dest": "647",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "646",
                "dest": "648",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "647",
                "dest": "648",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "641",
                "dest": "649",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "648",
                "dest": "649",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "649",
                "dest": "650",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "642",
                "dest": "651",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "650",
                "dest": "651",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "651",
                "dest": "652",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "652",
                "dest": "653",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "653",
                "dest": "654",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "655",
                "dest": "656",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "656",
                "dest": "657",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "658",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "659",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "660",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "661",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "658",
                "dest": "661",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "662",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "660",
                "dest": "662",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "661",
                "dest": "662",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "663",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "659",
                "dest": "663",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "664",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "662",
                "dest": "664",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "663",
                "dest": "664",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "665",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "654",
                "dest": "665",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "666",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "664",
                "dest": "666",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "665",
                "dest": "666",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "667",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "649",
                "dest": "667",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "668",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "667",
                "dest": "668",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "669",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "666",
                "dest": "669",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "668",
                "dest": "669",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "670",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "640",
                "dest": "670",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "671",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "669",
                "dest": "671",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "670",
                "dest": "671",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "672",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "673",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "672",
                "dest": "673",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "674",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "673",
                "dest": "674",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "675",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "674",
                "dest": "675",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "528",
                "dest": "675",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "676",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "674",
                "dest": "676",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "671",
                "dest": "676",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "675",
                "dest": "676",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "677",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "676",
                "dest": "677",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "671",
                "dest": "677",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "678",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "522",
                "dest": "678",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "679",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "678",
                "dest": "679",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "680",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "677",
                "dest": "680",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "679",
                "dest": "680",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "681",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "680",
                "dest": "681",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "682",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "433",
                "dest": "682",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "683",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "438",
                "dest": "683",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "684",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "443",
                "dest": "684",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "685",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "681",
                "dest": "685",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "682",
                "dest": "685",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "683",
                "dest": "685",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "684",
                "dest": "685",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "686",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "685",
                "dest": "686",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "657",
                "dest": "687",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "651",
                "dest": "687",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "685",
                "dest": "687",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "687",
                "dest": "688",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "651",
                "dest": "688",
                "branch": null
            }
        }
    ]
}