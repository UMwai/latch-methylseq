{
    "vertices": [
        {
            "content": {
                "id": "689",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "690",
                "label": "Channel.fromPath([checkIfExists:true], $projectDir/assets/multiqc_config.yml)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"GStringExpression\":{\"verbatimText\":\"$projectDir/assets/multiqc_config.yml\",\"strings\":[{\"ConstantExpression\":\"\"},{\"ConstantExpression\":\"/assets/multiqc_config.yml\"}],\"values\":[{\"VariableExpression\":\"projectDir\"}]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "691",
                "label": "params.multiqc_config",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "692",
                "label": "params.multiqc_config",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "693",
                "label": "Channel.fromPath([checkIfExists:true], params.multiqc_config)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "694",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "695",
                "label": "(params.multiqc_config) ? Channel.fromPath([checkIfExists:true], params.multiqc_config) : Channel.empty()",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "696",
                "label": "params.multiqc_logo",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_logo\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "697",
                "label": "params.multiqc_logo",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "698",
                "label": "Channel.fromPath([checkIfExists:true], params.multiqc_logo)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_logo\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "699",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "700",
                "label": "(params.multiqc_logo) ? Channel.fromPath([checkIfExists:true], params.multiqc_logo) : Channel.empty()",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "701",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "702",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "703",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "704",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "705",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "706",
                "label": "params.fasta",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "707",
                "label": "params.fasta",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "708",
                "label": "Channel.value(this.file(params.fasta))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "709",
                "label": "Merge ch_fasta",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "710",
                "label": "(params.aligner == bismark)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "711",
                "label": "(params.aligner == bismark_hisat)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark_hisat\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "712",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "713",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "714",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "715",
                "label": "params.bismark_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "716",
                "label": "params.bismark_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "717",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "718",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "719",
                "label": "params.bismark_index.endsWith(.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "720",
                "label": "this.file(params.bismark_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "721",
                "label": "[[:], this.file(params.bismark_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "722",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "723",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "724",
                "label": "Channel.value(this.file(params.bismark_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bismark_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "725",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "726",
                "label": "BISMARK_GENOMEPREPARATION",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_GENOMEPREPARATION\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_GENOMEPREPARATION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/genomepreparation/main.nf",
                "unaliased": "BISMARK_GENOMEPREPARATION",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "727",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "728",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "729",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "730",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bwameth\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "731",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "732",
                "label": "(params.aligner == bwameth)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "733",
                "label": "params.bwa_meth_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "734",
                "label": "params.bwa_meth_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "735",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".tar.gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "736",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "737",
                "label": "params.bwa_meth_index.endsWith(.tar.gz)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "738",
                "label": "this.file(params.bwa_meth_index)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "739",
                "label": "[[:], this.file(params.bwa_meth_index)]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "740",
                "label": "UNTAR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "741",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "742",
                "label": "Channel.value(this.file(params.bwa_meth_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bwa_meth_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "743",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "744",
                "label": "BWAMETH_INDEX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BWAMETH_INDEX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"index\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_INDEX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "index",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bwameth/index/main.nf",
                "unaliased": "BWAMETH_INDEX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "745",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "746",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "747",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "748",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "749",
                "label": "params.fasta_index",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "750",
                "label": "params.fasta_index",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "751",
                "label": "Channel.value(this.file(params.fasta_index))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"fasta_index\"}}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "752",
                "label": "[[:], ch_fasta]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"MapExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "753",
                "label": "SAMTOOLS_FAIDX",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_FAIDX\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gzi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FAIDX\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "fai",
                    "gzi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/faidx/main.nf",
                "unaliased": "SAMTOOLS_FAIDX",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "754",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "755",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "756",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "757",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "758",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "759",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "760",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "761",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "762",
                "label": "Merge ch_bismark_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "763",
                "label": "Merge UNTAR",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "764",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "765",
                "label": "Merge ch_fasta_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "766",
                "label": "Merge ch_bwameth_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "767",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":null}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "PREPARE_GENOME",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/prepare_genome.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "768",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "769",
                "label": "Channel.fromSamplesheet(input)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromSamplesheet\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"input\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "770",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"NotExpression\":{\"VariableExpression\":\"fastq_2\"}}},\"ifBlock\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"+\",\"rightExpression\":{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"single_end\"},\"valueExpression\":{\"ConstantExpression\":true}}}]}}},{\"ListExpression\":[{\"VariableExpression\":\"fastq_1\"}]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"elseBlock\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"+\",\"rightExpression\":{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"single_end\"},\"valueExpression\":{\"ConstantExpression\":false}}}]}}},{\"ListExpression\":[{\"VariableExpression\":\"fastq_1\"},{\"VariableExpression\":\"fastq_2\"}]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq_1\",\"fastq_2\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "771",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "772",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_clone\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"method\":\"clone\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"parts\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}},\"method\":\"split\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"_\"}]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}},\"operation\":\"=\",\"rightExpression\":{\"TernaryExpression\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareGreaterThan\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"parts\"},\"property\":\"length\"}},{\"ConstantExpression\":1}]}}}}},\"trueExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"parts\"},\"operation\":\"[\",\"rightExpression\":{\"RangeExpression\":{\"from\":{\"ConstantExpression\":0},\"to\":{\"ConstantExpression\":-2},\"inclusive\":true}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"_\"}]}}}},\"falseExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta_clone\"},\"property\":\"id\"}}}}}},\"labels\":[]}},{\"ReturnStatement\":{\"ListExpression\":[{\"VariableExpression\":\"meta_clone\"},{\"VariableExpression\":\"fastq\"}]}}],\"scope\":{\"declaredVariables\":[\"meta_clone\"],\"referencedClassVariables\":[\"parts\",\"compareGreaterThan\"]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "773",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"by\"},\"valueExpression\":{\"ListExpression\":[{\"ConstantExpression\":0}]}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "774",
                "label": "branch",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"branch\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareEqual\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"size\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":1}]}}}},\"labels\":[\"single\"]}},{\"ReturnStatement\":{\"ConstructorCallExpression\":{\"type\":\"nextflow.script.TokenBranchChoice\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},{\"ConstantExpression\":\"single\"}]}}}}},{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"ClassExpression\":{\"type\":\"nextflow.ast.LangHelpers\"}},\"method\":\"compareGreaterThan\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"size\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":1}]}}}},\"labels\":[\"multiple\"]}},{\"ReturnStatement\":{\"ConstructorCallExpression\":{\"type\":\"nextflow.script.TokenBranchChoice\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"fastq\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},{\"ConstantExpression\":\"multiple\"}]}}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fastq\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"single\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"single\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"multiple\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"multiple\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "single",
                    "multiple"
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "775",
                "label": "CAT_FASTQ",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"CAT_FASTQ\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"reads\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CAT_FASTQ\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CAT_FASTQ\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "reads",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/cat/fastq/main.nf",
                "unaliased": "CAT_FASTQ",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "776",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "777",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "778",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "779",
                "label": "FASTQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"FASTQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"zip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FASTQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "html",
                    "zip",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/fastqc/main.nf",
                "unaliased": "FASTQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "780",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "781",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "782",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_trimming\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "783",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "784",
                "label": "params.skip_trimming",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "785",
                "label": "TRIMGALORE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"TRIMGALORE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"reads\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"_latch_placeholder_log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"unpaired\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"zip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TRIMGALORE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "reads",
                    "log",
                    "unpaired",
                    "html",
                    "zip",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/trimgalore/main.nf",
                "unaliased": "TRIMGALORE",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "786",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "787",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "788",
                "label": "Merge reads",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "789",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "790",
                "label": "(params.aligner == bismark)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "791",
                "label": "(params.aligner == bismark_hisat)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bismark_hisat\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "792",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "793",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "794",
                "label": "((params.aligner == bismark) || (params.aligner == bismark_hisat))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "795",
                "label": "(params.skip_deduplication || params.rrbs)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_deduplication\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"rrbs\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "796",
                "label": "(params.cytosine_report || params.nomeseq)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"cytosine_report\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"nomeseq\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "797",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "798",
                "label": "BISMARK_ALIGN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_ALIGN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"unmapped\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "report",
                    "unmapped",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/align/main.nf",
                "unaliased": "BISMARK_ALIGN",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "799",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "800",
                "label": "SAMTOOLS_SORT_ALIGNED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT_ALIGNED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_ALIGNED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "801",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "802",
                "label": "skip_deduplication",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "803",
                "label": "skip_deduplication",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "804",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"report\"},{\"ListExpression\":[]}]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"report\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "805",
                "label": "BISMARK_DEDUPLICATE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_DEDUPLICATE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_DEDUPLICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "report",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/deduplicate/main.nf",
                "unaliased": "BISMARK_DEDUPLICATE",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "806",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "807",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "808",
                "label": "Merge alignments",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "809",
                "label": "Merge alignment_reports",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "810",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "811",
                "label": "BISMARK_METHYLATIONEXTRACTOR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_METHYLATIONEXTRACTOR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bedgraph\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"methylation_calls\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"coverage\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mbias\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_METHYLATIONEXTRACTOR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bedgraph",
                    "methylation_calls",
                    "coverage",
                    "report",
                    "mbias",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/methylationextractor/main.nf",
                "unaliased": "BISMARK_METHYLATIONEXTRACTOR",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "812",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "813",
                "label": "cytosine_report",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "814",
                "label": "cytosine_report",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "815",
                "label": "BISMARK_COVERAGE2CYTOSINE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_COVERAGE2CYTOSINE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"coverage\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_COVERAGE2CYTOSINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "coverage",
                    "report",
                    "summary",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/coverage2cytosine/main.nf",
                "unaliased": "BISMARK_COVERAGE2CYTOSINE",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "816",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "817",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "818",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "819",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "820",
                "label": "BISMARK_REPORT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_REPORT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_REPORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_REPORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/report/main.nf",
                "unaliased": "BISMARK_REPORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "821",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "822",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"property\":\"name\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "823",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "824",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "825",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "826",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "827",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "828",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "829",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "830",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "831",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "832",
                "label": "BISMARK_SUMMARY",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BISMARK_SUMMARY\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_SUMMARY\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BISMARK_SUMMARY\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "summary",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bismark/summary/main.nf",
                "unaliased": "BISMARK_SUMMARY",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "833",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "834",
                "label": "SAMTOOLS_SORT_DEDUPLICATED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT_DEDUPLICATED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "835",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "836",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "837",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "838",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "839",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "840",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "841",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "842",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "843",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "844",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "845",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "846",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BISMARK",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bismark.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "847",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"it\"},\"property\":\"baseName\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "848",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "849",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"aligner\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"bwameth\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "850",
                "label": "(params.aligner == bwameth)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "851",
                "label": "(params.aligner == bwameth)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "852",
                "label": "(params.skip_deduplication || params.rrbs)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_deduplication\"}},\"operation\":\"||\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"rrbs\"}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "853",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "854",
                "label": "BWAMETH_ALIGN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BWAMETH_ALIGN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BWAMETH_ALIGN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/bwameth/align/main.nf",
                "unaliased": "BWAMETH_ALIGN",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 12,
                "memoryBytes": 77309411328
            }
        },
        {
            "content": {
                "id": "855",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "856",
                "label": "SAMTOOLS_SORT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_SORT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_SORT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "csi",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/sort/main.nf",
                "unaliased": "SAMTOOLS_SORT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "857",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "858",
                "label": "SAMTOOLS_INDEX_ALIGNMENTS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_INDEX_ALIGNMENTS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"crai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_ALIGNMENTS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bai",
                    "csi",
                    "crai",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/index/main.nf",
                "unaliased": "SAMTOOLS_INDEX",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "859",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "860",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "861",
                "label": "SAMTOOLS_FLAGSTAT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_FLAGSTAT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"flagstat\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FLAGSTAT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_FLAGSTAT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "flagstat",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/flagstat/main.nf",
                "unaliased": "SAMTOOLS_FLAGSTAT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "862",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "863",
                "label": "SAMTOOLS_STATS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_STATS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ListExpression\":[]}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"stats\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_STATS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_STATS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "stats",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/stats/main.nf",
                "unaliased": "SAMTOOLS_STATS",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "864",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "865",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "866",
                "label": "skip_deduplication",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "867",
                "label": "skip_deduplication",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "868",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "869",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "870",
                "label": "PICARD_MARKDUPLICATES",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"PICARD_MARKDUPLICATES\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bam\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"metrics\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PICARD_MARKDUPLICATES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bam",
                    "bai",
                    "metrics",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/picard/markduplicates/main.nf",
                "unaliased": "PICARD_MARKDUPLICATES",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "871",
                "label": "SAMTOOLS_INDEX_DEDUPLICATED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"SAMTOOLS_INDEX_DEDUPLICATED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"crai\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"SAMTOOLS_INDEX_DEDUPLICATED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bai",
                    "csi",
                    "crai",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/samtools/index/main.nf",
                "unaliased": "SAMTOOLS_INDEX",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "872",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "873",
                "label": "Merge bam_index",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "874",
                "label": "Merge alignments",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "875",
                "label": "Merge picard_metrics",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "876",
                "label": "Merge picard_version",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "877",
                "label": "Merge versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "878",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "879",
                "label": "METHYLDACKEL_EXTRACT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"METHYLDACKEL_EXTRACT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bedgraph\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"methylkit\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_EXTRACT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "bedgraph",
                    "methylkit",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/methyldackel/extract/main.nf",
                "unaliased": "METHYLDACKEL_EXTRACT",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "880",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "881",
                "label": "METHYLDACKEL_MBIAS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"METHYLDACKEL_MBIAS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"txt\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_MBIAS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"METHYLDACKEL_MBIAS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "txt",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/methyldackel/mbias/main.nf",
                "unaliased": "METHYLDACKEL_MBIAS",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": 4,
                "memoryBytes": 17179869184
            }
        },
        {
            "content": {
                "id": "882",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "883",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "884",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "885",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "886",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "887",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "888",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "889",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "890",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "891",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "892",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "BWAMETH",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/subworkflows/local/bwameth.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "893",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"it\"},\"property\":\"baseName\"}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "894",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "895",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "896",
                "label": "Merge ch_bam",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "897",
                "label": "Merge ch_aligner_mqc",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "898",
                "label": "Merge ch_dedup",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "899",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "900",
                "label": "params.bamqc_regions_file",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"BooleanExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bamqc_regions_file\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "901",
                "label": "params.bamqc_regions_file",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "902",
                "label": "Channel.fromPath([checkIfExists:true], params.bamqc_regions_file)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bamqc_regions_file\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "903",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "904",
                "label": "[]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "905",
                "label": "(params.bamqc_regions_file) ? Channel.fromPath([checkIfExists:true], params.bamqc_regions_file).toList() : []",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "906",
                "label": "QUALIMAP_BAMQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"QUALIMAP_BAMQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"results\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"QUALIMAP_BAMQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"QUALIMAP_BAMQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "results",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/qualimap/bamqc/main.nf",
                "unaliased": "QUALIMAP_BAMQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": 8,
                "memoryBytes": 51539607552
            }
        },
        {
            "content": {
                "id": "907",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "908",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "909",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "910",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"collated_versions.yml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "911",
                "label": "CUSTOM_DUMPSOFTWAREVERSIONS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"CUSTOM_DUMPSOFTWAREVERSIONS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mqc_yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "yml",
                    "mqc_yml",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/custom/dumpsoftwareversions/main.nf",
                "unaliased": "CUSTOM_DUMPSOFTWAREVERSIONS",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "912",
                "label": "params.skip_multiqc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_multiqc\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "913",
                "label": "params.skip_multiqc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "914",
                "label": "params.skip_multiqc",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "915",
                "label": "Channel.value(WorkflowMethylseq.paramsSummaryMultiqc(workflow, summary_params))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"WorkflowMethylseq\"},\"method\":\"paramsSummaryMultiqc\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"VariableExpression\":\"workflow\"},{\"VariableExpression\":\"summary_params\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "916",
                "label": "Channel.value(WorkflowMethylseq.methodsDescriptionText(workflow, ch_multiqc_custom_methods_description, params))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"WorkflowMethylseq\"},\"method\":\"methodsDescriptionText\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"VariableExpression\":\"workflow\"},{\"VariableExpression\":\"ch_multiqc_custom_methods_description\"},{\"VariableExpression\":\"params\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "917",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "918",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"workflow_summary_mqc.yaml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "919",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "920",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"methods_description_mqc.yaml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "921",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "922",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "923",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "924",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "925",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "926",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "927",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "928",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "929",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"skip_trimming\"}}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "930",
                "label": "params.skip_trimming",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "931",
                "label": "params.skip_trimming",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "932",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "933",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "934",
                "label": "Merge ch_multiqc_files",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "935",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ReturnStatement\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "936",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "937",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "938",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "939",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "940",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "941",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "942",
                "label": "MULTIQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"MULTIQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"data\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"plots\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "data",
                    "plots",
                    "versions"
                ],
                "module": "/Users/bronte/Documents/latch-methylseq/modules/nf-core/multiqc/main.nf",
                "unaliased": "MULTIQC",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "943",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "944",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        },
        {
            "content": {
                "id": "945",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": "",
                "subWorkflowName": "METHYLSEQ",
                "subWorkflowPath": "/Users/bronte/Documents/latch-methylseq/workflows/methylseq.nf",
                "cpu": null,
                "memoryBytes": null
            }
        }
    ],
    "edges": [
        {
            "content": {
                "label": "",
                "src": "691",
                "dest": "692",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "692",
                "dest": "693",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "692",
                "dest": "694",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "693",
                "dest": "695",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "694",
                "dest": "695",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "696",
                "dest": "697",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "697",
                "dest": "698",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "697",
                "dest": "699",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "698",
                "dest": "700",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "699",
                "dest": "700",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "706",
                "dest": "707",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "707",
                "dest": "708",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "708",
                "dest": "709",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "702",
                "dest": "709",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "710",
                "dest": "712",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "711",
                "dest": "712",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "712",
                "dest": "713",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "713",
                "dest": "714",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "715",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "716",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "715",
                "dest": "716",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "717",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "717",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "718",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "718",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "717",
                "dest": "718",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "719",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "719",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "718",
                "dest": "719",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "720",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "720",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "719",
                "dest": "720",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "721",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "721",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "719",
                "dest": "721",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "720",
                "dest": "721",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "722",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "722",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "719",
                "dest": "722",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "721",
                "dest": "722",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "723",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "723",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "719",
                "dest": "723",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "722",
                "dest": "723",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "724",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "724",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "719",
                "dest": "724",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "725",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "716",
                "dest": "725",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "723",
                "dest": "725",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "724",
                "dest": "725",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "726",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "716",
                "dest": "726",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "709",
                "dest": "726",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "727",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "716",
                "dest": "727",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "701",
                "dest": "727",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "726",
                "dest": "727",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "728",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "725",
                "dest": "728",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "726",
                "dest": "728",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "714",
                "dest": "729",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "701",
                "dest": "729",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "727",
                "dest": "729",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "730",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "731",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "730",
                "dest": "731",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "732",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "731",
                "dest": "732",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "733",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "733",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "734",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "734",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "733",
                "dest": "734",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "735",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "735",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "735",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "736",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "736",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "736",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "735",
                "dest": "736",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "737",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "737",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "737",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "736",
                "dest": "737",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "738",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "738",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "738",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "737",
                "dest": "738",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "739",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "739",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "739",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "737",
                "dest": "739",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "738",
                "dest": "739",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "740",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "740",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "740",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "737",
                "dest": "740",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "739",
                "dest": "740",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "741",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "741",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "741",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "737",
                "dest": "741",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "740",
                "dest": "741",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "742",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "742",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "742",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "737",
                "dest": "742",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "743",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "743",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "734",
                "dest": "743",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "741",
                "dest": "743",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "742",
                "dest": "743",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "744",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "744",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "734",
                "dest": "744",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "709",
                "dest": "744",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "745",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "745",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "734",
                "dest": "745",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "701",
                "dest": "745",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "744",
                "dest": "745",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "746",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "746",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "743",
                "dest": "746",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "703",
                "dest": "746",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "747",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "747",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "704",
                "dest": "747",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "744",
                "dest": "747",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "748",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "748",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "701",
                "dest": "748",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "745",
                "dest": "748",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "749",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "749",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "750",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "750",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "749",
                "dest": "750",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "751",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "751",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "750",
                "dest": "751",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "752",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "752",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "750",
                "dest": "752",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "709",
                "dest": "752",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "753",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "753",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "750",
                "dest": "753",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "752",
                "dest": "753",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "754",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "754",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "750",
                "dest": "754",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "753",
                "dest": "754",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "755",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "755",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "750",
                "dest": "755",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "748",
                "dest": "755",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "753",
                "dest": "755",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "756",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "756",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "751",
                "dest": "756",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "754",
                "dest": "756",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "757",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "732",
                "dest": "757",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "748",
                "dest": "757",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "755",
                "dest": "757",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "758",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "746",
                "dest": "758",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "703",
                "dest": "758",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "759",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "756",
                "dest": "759",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "705",
                "dest": "759",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "760",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "747",
                "dest": "760",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "704",
                "dest": "760",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "714",
                "dest": "761",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "757",
                "dest": "761",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "701",
                "dest": "761",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "728",
                "dest": "762",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "758",
                "dest": "762",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "722",
                "dest": "763",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "722",
                "dest": "763",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "740",
                "dest": "763",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "740",
                "dest": "763",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "729",
                "dest": "764",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "761",
                "dest": "764",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "705",
                "dest": "765",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "759",
                "dest": "765",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "704",
                "dest": "766",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "760",
                "dest": "766",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "764",
                "dest": "767",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "689",
                "dest": "768",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "767",
                "dest": "768",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "769",
                "dest": "770",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "770",
                "dest": "771",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "771",
                "dest": "772",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "772",
                "dest": "773",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "773",
                "dest": "774",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "774",
                "dest": "775",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "775",
                "dest": "776",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "774",
                "dest": "776",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "775",
                "dest": "777",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "768",
                "dest": "778",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "777",
                "dest": "778",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "776",
                "dest": "779",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "779",
                "dest": "780",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "778",
                "dest": "781",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "780",
                "dest": "781",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "782",
                "dest": "783",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "783",
                "dest": "784",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "784",
                "dest": "785",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "776",
                "dest": "785",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "784",
                "dest": "786",
                "branch": true
            }
        },
        {
            "content": {
                "label": "5",
                "src": "785",
                "dest": "786",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "784",
                "dest": "787",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "781",
                "dest": "787",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "786",
                "dest": "787",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "785",
                "dest": "788",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "776",
                "dest": "788",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "787",
                "dest": "789",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "781",
                "dest": "789",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "790",
                "dest": "792",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "791",
                "dest": "792",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "792",
                "dest": "793",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "793",
                "dest": "794",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "795",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "796",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "797",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "798",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "799",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "800",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "801",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "802",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "803",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "804",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "805",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "806",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "807",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "808",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "809",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "810",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "811",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "812",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "813",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "814",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "815",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "816",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "817",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "818",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "819",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "820",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "821",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "822",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "823",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "824",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "825",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "826",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "827",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "828",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "829",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "830",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "831",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "832",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "833",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "834",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "835",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "836",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "837",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "838",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "839",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "840",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "841",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "842",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "843",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "844",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "845",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "846",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "788",
                "dest": "798",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "762",
                "dest": "798",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "797",
                "dest": "799",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "798",
                "dest": "799",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "798",
                "dest": "800",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "799",
                "dest": "801",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "800",
                "dest": "801",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "795",
                "dest": "802",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "802",
                "dest": "803",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "803",
                "dest": "804",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "798",
                "dest": "804",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "803",
                "dest": "805",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "798",
                "dest": "805",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "803",
                "dest": "806",
                "branch": false
            }
        },
        {
            "content": {
                "label": "1",
                "src": "798",
                "dest": "806",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "805",
                "dest": "806",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "803",
                "dest": "807",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "801",
                "dest": "807",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "805",
                "dest": "807",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "798",
                "dest": "808",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "805",
                "dest": "808",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "804",
                "dest": "809",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "806",
                "dest": "809",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "801",
                "dest": "810",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "807",
                "dest": "810",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "808",
                "dest": "811",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "762",
                "dest": "811",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "810",
                "dest": "812",
                "branch": null
            }
        },
        {
            "content": {
                "label": "5",
                "src": "811",
                "dest": "812",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "796",
                "dest": "813",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "813",
                "dest": "814",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "814",
                "dest": "815",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "811",
                "dest": "815",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "762",
                "dest": "815",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "814",
                "dest": "816",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "812",
                "dest": "816",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "815",
                "dest": "816",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "816",
                "dest": "817",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "812",
                "dest": "817",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "809",
                "dest": "818",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "811",
                "dest": "818",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "818",
                "dest": "819",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "811",
                "dest": "819",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "819",
                "dest": "820",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "817",
                "dest": "821",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "820",
                "dest": "821",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "798",
                "dest": "822",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "822",
                "dest": "823",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "809",
                "dest": "824",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "824",
                "dest": "825",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "809",
                "dest": "826",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "826",
                "dest": "827",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "811",
                "dest": "828",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "828",
                "dest": "829",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "811",
                "dest": "830",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "830",
                "dest": "831",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "823",
                "dest": "832",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "825",
                "dest": "832",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "827",
                "dest": "832",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "829",
                "dest": "832",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "831",
                "dest": "832",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "821",
                "dest": "833",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "832",
                "dest": "833",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "808",
                "dest": "834",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "833",
                "dest": "835",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "834",
                "dest": "835",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "832",
                "dest": "836",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "809",
                "dest": "837",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "836",
                "dest": "838",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "837",
                "dest": "838",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "809",
                "dest": "839",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "838",
                "dest": "840",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "839",
                "dest": "840",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "811",
                "dest": "841",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "840",
                "dest": "842",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "841",
                "dest": "842",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "811",
                "dest": "843",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "842",
                "dest": "844",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "843",
                "dest": "844",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "820",
                "dest": "845",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "844",
                "dest": "846",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "845",
                "dest": "846",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "847",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "835",
                "dest": "847",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "794",
                "dest": "848",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "789",
                "dest": "848",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "847",
                "dest": "848",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "849",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "850",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "849",
                "dest": "850",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "851",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "850",
                "dest": "851",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "852",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "852",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "853",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "853",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "854",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "854",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "855",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "855",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "856",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "856",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "857",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "857",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "858",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "858",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "859",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "859",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "860",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "860",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "861",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "861",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "862",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "862",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "863",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "863",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "864",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "864",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "865",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "865",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "866",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "866",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "867",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "867",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "868",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "868",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "869",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "869",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "870",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "870",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "871",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "871",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "872",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "872",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "873",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "873",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "874",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "874",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "875",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "875",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "876",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "876",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "877",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "877",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "878",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "878",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "879",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "879",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "880",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "880",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "881",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "881",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "882",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "882",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "883",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "883",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "884",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "884",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "885",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "885",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "886",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "886",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "887",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "887",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "888",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "888",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "889",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "889",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "890",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "890",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "891",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "891",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "892",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "892",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "788",
                "dest": "854",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "766",
                "dest": "854",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "853",
                "dest": "855",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "854",
                "dest": "855",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "854",
                "dest": "856",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "855",
                "dest": "857",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "856",
                "dest": "857",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "856",
                "dest": "858",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "857",
                "dest": "859",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "858",
                "dest": "859",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "854",
                "dest": "860",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "858",
                "dest": "860",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "860",
                "dest": "861",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "854",
                "dest": "862",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "858",
                "dest": "862",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "862",
                "dest": "863",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "859",
                "dest": "864",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "861",
                "dest": "864",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "864",
                "dest": "865",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "863",
                "dest": "865",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "852",
                "dest": "866",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "866",
                "dest": "867",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "867",
                "dest": "868",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true - Branch: true",
                "src": "867",
                "dest": "869",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "867",
                "dest": "870",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "856",
                "dest": "870",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "709",
                "dest": "870",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "765",
                "dest": "870",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "867",
                "dest": "871",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "870",
                "dest": "871",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false - Branch: false",
                "src": "867",
                "dest": "872",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "865",
                "dest": "872",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "870",
                "dest": "872",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "858",
                "dest": "873",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "871",
                "dest": "873",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "856",
                "dest": "874",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "870",
                "dest": "874",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "868",
                "dest": "875",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "870",
                "dest": "875",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "869",
                "dest": "876",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "870",
                "dest": "876",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "865",
                "dest": "877",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "872",
                "dest": "877",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "874",
                "dest": "878",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "873",
                "dest": "878",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "878",
                "dest": "879",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "709",
                "dest": "879",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "765",
                "dest": "879",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "874",
                "dest": "880",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "873",
                "dest": "880",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "880",
                "dest": "881",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "709",
                "dest": "881",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "765",
                "dest": "881",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "877",
                "dest": "882",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "879",
                "dest": "882",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "882",
                "dest": "883",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "881",
                "dest": "883",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "875",
                "dest": "884",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "861",
                "dest": "885",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "884",
                "dest": "886",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "885",
                "dest": "886",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "863",
                "dest": "887",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "886",
                "dest": "888",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "887",
                "dest": "888",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "879",
                "dest": "889",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "888",
                "dest": "890",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "889",
                "dest": "890",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "881",
                "dest": "891",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "890",
                "dest": "892",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "891",
                "dest": "892",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "893",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "893",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "883",
                "dest": "893",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "894",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "851",
                "dest": "894",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "789",
                "dest": "894",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "893",
                "dest": "894",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "794",
                "dest": "895",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "894",
                "dest": "895",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "789",
                "dest": "895",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "800",
                "dest": "896",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "856",
                "dest": "896",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "846",
                "dest": "897",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "892",
                "dest": "897",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "834",
                "dest": "898",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "874",
                "dest": "898",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "848",
                "dest": "899",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "895",
                "dest": "899",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "900",
                "dest": "901",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "901",
                "dest": "902",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "901",
                "dest": "903",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "902",
                "dest": "903",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "901",
                "dest": "904",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "903",
                "dest": "905",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "904",
                "dest": "905",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "898",
                "dest": "906",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "905",
                "dest": "906",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "906",
                "dest": "907",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "899",
                "dest": "908",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "907",
                "dest": "908",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "908",
                "dest": "909",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "909",
                "dest": "910",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "910",
                "dest": "911",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "912",
                "dest": "913",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "913",
                "dest": "914",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "915",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "916",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "917",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "918",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "915",
                "dest": "918",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "919",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "917",
                "dest": "919",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "918",
                "dest": "919",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "920",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "916",
                "dest": "920",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "921",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "919",
                "dest": "921",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "920",
                "dest": "921",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "922",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "911",
                "dest": "922",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "923",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "921",
                "dest": "923",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "922",
                "dest": "923",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "924",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "906",
                "dest": "924",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "925",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "924",
                "dest": "925",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "926",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "923",
                "dest": "926",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "925",
                "dest": "926",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "927",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "897",
                "dest": "927",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "928",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "926",
                "dest": "928",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "927",
                "dest": "928",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "929",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "930",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "929",
                "dest": "930",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "931",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "930",
                "dest": "931",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "932",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "931",
                "dest": "932",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "785",
                "dest": "932",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "933",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "931",
                "dest": "933",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "928",
                "dest": "933",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "932",
                "dest": "933",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "934",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "933",
                "dest": "934",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "928",
                "dest": "934",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "935",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "779",
                "dest": "935",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "936",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "935",
                "dest": "936",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "937",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "934",
                "dest": "937",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "936",
                "dest": "937",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "938",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "937",
                "dest": "938",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "939",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "690",
                "dest": "939",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "940",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "695",
                "dest": "940",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "941",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "700",
                "dest": "941",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "942",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "938",
                "dest": "942",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "939",
                "dest": "942",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "940",
                "dest": "942",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "941",
                "dest": "942",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "943",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "942",
                "dest": "943",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "944",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "908",
                "dest": "944",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "942",
                "dest": "944",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "944",
                "dest": "945",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "908",
                "dest": "945",
                "branch": null
            }
        }
    ]
}